<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eventmanagement.mapper.EventMapper">

    <!-- Result Map -->
    <resultMap id="EventResultMap" type="com.eventmanagement.entity.Event">
        <id property="eventId" column="event_id"/>
        <result property="eventName" column="event_name"/>
        <result property="description" column="description"/>
        <result property="startDateTime" column="start_date_time"/>
        <result property="endDateTime" column="end_date_time"/>
        <result property="location" column="location"/>
        <result property="organizer" column="organizer"/>
        <result property="maxParticipants" column="max_participants"/>
        <result property="currentParticipants" column="current_participants"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- Base Select Fields -->
    <sql id="baseSelectFields">
        event_id, event_name, description, start_date_time, end_date_time, 
        location, organizer, max_participants, current_participants, 
        status, created_at, updated_at
    </sql>

    <!-- Base Where Clause -->
    <sql id="baseWhereClause">
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="organizer != null">
                AND organizer = #{organizer}
            </if>
            <if test="eventName != null">
                AND event_name LIKE '%' || #{eventName} || '%'
            </if>
        </where>
    </sql>

    <!-- Select All Events -->
    <select id="findAll" resultMap="EventResultMap">
        SELECT 
            <include refid="baseSelectFields"/>
        FROM events
        ORDER BY created_at DESC
    </select>

    <!-- Select Event by ID -->
    <select id="findById" resultMap="EventResultMap">
        SELECT 
            <include refid="baseSelectFields"/>
        FROM events
        WHERE event_id = #{eventId}
    </select>

    <!-- Select Events by Status -->
    <select id="findByStatus" resultMap="EventResultMap">
        SELECT 
            <include refid="baseSelectFields"/>
        FROM events
        WHERE status = #{status}
        ORDER BY created_at DESC
    </select>

    <!-- Select Events by Organizer -->
    <select id="findByOrganizer" resultMap="EventResultMap">
        SELECT 
            <include refid="baseSelectFields"/>
        FROM events
        WHERE organizer = #{organizer}
        ORDER BY created_at DESC
    </select>

    <!-- Insert Event -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="eventId">
        INSERT INTO events (
            event_name, description, start_date_time, end_date_time, 
            location, organizer, max_participants, current_participants, 
            status, created_at, updated_at
        ) VALUES (
            #{eventName}, #{description}, #{startDateTime}, #{endDateTime}, 
            #{location}, #{organizer}, #{maxParticipants}, #{currentParticipants}, 
            #{status}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        )
    </insert>

    <!-- Update Event -->
    <update id="update">
        UPDATE events
        SET 
            event_name = #{eventName},
            description = #{description},
            start_date_time = #{startDateTime},
            end_date_time = #{endDateTime},
            location = #{location},
            organizer = #{organizer},
            max_participants = #{maxParticipants},
            current_participants = #{currentParticipants},
            status = #{status},
            updated_at = CURRENT_TIMESTAMP
        WHERE event_id = #{eventId}
    </update>

    <!-- Delete Event -->
    <delete id="deleteById">
        DELETE FROM events WHERE event_id = #{eventId}
    </delete>

    <!-- Count Events -->
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM events
    </select>

    <!-- Count Events by Status -->
    <select id="countByStatus" resultType="int">
        SELECT COUNT(*) FROM events WHERE status = #{status}
    </select>

    <!-- Statistics Query -->
    <select id="getStatistics" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_events,
            SUM(CASE WHEN status = 'ACTIVE' THEN 1 ELSE 0 END) as active_events,
            SUM(CASE WHEN status = 'COMPLETED' THEN 1 ELSE 0 END) as completed_events,
            SUM(CASE WHEN status = 'CANCELLED' THEN 1 ELSE 0 END) as cancelled_events,
            SUM(current_participants) as total_participants,
            AVG(current_participants) as avg_participants
        FROM events
    </select>

</mapper>