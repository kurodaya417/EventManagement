<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eventmanagement.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.eventmanagement.entity.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="fullName" column="full_name"/>
        <result property="role" column="role"/>
        <result property="enabled" column="enabled"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="findByUsername" resultMap="userResultMap">
        SELECT user_id, username, password, email, full_name, role, enabled, created_at, updated_at
        FROM users
        WHERE username = #{username}
    </select>

    <select id="findByEmail" resultMap="userResultMap">
        SELECT user_id, username, password, email, full_name, role, enabled, created_at, updated_at
        FROM users
        WHERE email = #{email}
    </select>

    <select id="findById" resultMap="userResultMap">
        SELECT user_id, username, password, email, full_name, role, enabled, created_at, updated_at
        FROM users
        WHERE user_id = #{userId}
    </select>

    <select id="findAll" resultMap="userResultMap">
        SELECT user_id, username, password, email, full_name, role, enabled, created_at, updated_at
        FROM users
        ORDER BY created_at DESC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (username, password, email, full_name, role, enabled, created_at, updated_at)
        VALUES (#{username}, #{password}, #{email}, #{fullName}, #{role}, #{enabled}, 
                NOW(), NOW())
    </insert>

    <update id="update">
        UPDATE users
        SET username = #{username},
            password = #{password},
            email = #{email},
            full_name = #{fullName},
            role = #{role},
            enabled = #{enabled},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <delete id="deleteById">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>

    <select id="existsByUsername" resultType="java.lang.Boolean">
        SELECT CASE WHEN COUNT(*) &gt; 0 THEN 1 ELSE 0 END
        FROM users
        WHERE username = #{username}
    </select>

    <select id="existsByEmail" resultType="java.lang.Boolean">
        SELECT CASE WHEN COUNT(*) &gt; 0 THEN 1 ELSE 0 END
        FROM users
        WHERE email = #{email}
    </select>

</mapper>